#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include<string.h>
#include<algorithm>
#include<iostream>
using namespace std;



              //大端字节序与小端字节序
           //数据存储是从低位到高位（地址），如int是4个字节（8个比特位），那么0x11223344，如果存储形式为44332211，那么为小端存储（数据的后面数放低位）
         //，如果存储形式为11223344，为大端存储
         
        //代码判断编译器是什么存储
//int main() { 
//    int a = 1;//即0x00000001
//    char* p = (char*)&a;//只需要判断第一个字节是01还是00，读取一个字节的指针是char
//        if (*p == 01)cout << "min";
//        else cout << "max";
//    return 0;   //vs为小端
//}
//




//int main() {
//    char a = -128;//char类型读取一个字节（8比特位），a=10000000,反：01111111，补码：10000000
//    printf("%d\n\n", a);   //char变为int，整型提升，补码：10000000符号位为1，高位补1，11111111111111111111111110000000，转为原码打印成为128
//    printf("%u\n\n", a);//char变为无符号位整型，无符号位整型提升（高位补0），补码：000000000000000000000100000000000，变为原码位11111111111111111101111111，打印出来极大，为4294967168
//    return 0;
//  }
















